<?php

/**
 * @file
 * WSDL Docs - installation file.
 */

/**
 * Implements hook_schema().
 */
function wsdl_docs_schema() {
  $schema['wsdl_docs_soap_services'] = [
    'fields' => [
      'nid' => [
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Node id soap service node.',
      ],
      'label' => [
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'description' => 'Soap service node label.',
      ],
      'url' => [
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'description' => 'The url of the soap service.',
      ],
      'operations' => [
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'description' => 'The operations this web service offers.',
      ],
      'datatypes' => [
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'description' => 'The complex data types used in the operations.',
      ],
    ],
    'primary key' => ['nid'],
  ];
  return $schema;
}

/**
 * Initialize new custom table.
 */
function wsdl_docs_update_8001() {
  drupal_install_schema('wsdl_docs');
}

/**
 * Re-save all soap service nodes.
 */
function wsdl_docs_update_8002(&$sandbox) {
  if (!isset($sandbox['total'])) {
    $nids = \Drupal::entityQuery('node')
      ->condition('type', 'soap_service')
      ->execute();
    $sandbox['total'] = count($nids);
    $sandbox['current'] = 0;
  }
  $node_storage = \Drupal::entityTypeManager()->getStorage('node');
  $nodes_per_batch = 2;

  // Handle one pass through.
  $nids = \Drupal::entityQuery('node')
    ->condition('type', 'soap_service')
    ->range($sandbox['current'], $sandbox['current'] + $nodes_per_batch)
    ->execute();
  $nodes = $node_storage->loadMultiple($nids);

  foreach($nodes as $node) {
    $node->save();
    $sandbox['current']++;
  }
  \Drupal::logger('wsdl_docs')->debug('@count soap service nodes were updated', ['@count' => $sandbox['current']]);
  if ($sandbox['total'] == 0) {
    $sandbox['#finished'] = 1;
  } else {
    $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);
  }
}
